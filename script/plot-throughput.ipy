#!/usr/bin/ipython3
import collections

with open('shortlong0.log') as f:
    li = []
    for line in f:
        li.append(dict(item.split(':') for item in line.strip().split()))
    # print(li)

def classify(d):
    cond0 = d['nrMutexPerTh'] == '4000' and d['workload'] == 'shortlong' and d['shortMode'] == '0'
    if cond0 and (d['mode'] in ['nowait', 'leis', 'wait-die', 'silo-occ', 'tictoc', 'trlock', 'trlock-occ']):
        return d['mode']
    if cond0 and (d['mode'] in ['trlock-hybrid']):
        if d['pqLockType'] == '0':
            return 'trlock-hybrid'
        if d['pqLockType'] == '4':
            return 'trlock-hybrid-pqmcs2'
    return None

# groupby
g = collections.defaultdict(list)
for d in li:
    name = classify(d)
    if name is None:
        continue
    concurrency = int(d['concurrency']) 
    g[name, concurrency].append(d)

li2 = []
for (name, concurrency), dl in g.items():
    micro = lambda x: x / 1000000
    li = [float(d['tps']) for d in dl]
    li2.append([name, concurrency, micro(sum(li) / len(li)), micro(min(li)), micro(max(li))])

with open('shortlong0.plot', 'w') as f:
    for item in sorted(li2, key=lambda x: (x[0], x[1])):
        print(*item, file=f)

name_li = ['nowait', 'wait-die', 'leis', 'silo-occ', 'tictoc', 'trlock', 'trlock-occ', 'trlock-hybrid', 'trlock-hybrid-pqmcs2']
with open('shortlong0.gp', 'w') as f:
    print('''
set key top left
set xrange [0:145]
set xlabel "Concurrency"
set ylabel "10^6 tps"
set grid

lw0 = 1.2
ps0 = 1.5

set style line 1 pt 1  ps ps0 lw lw0
set style line 2 pt 2  ps ps0 lw lw0
set style line 3 pt 3  ps ps0 lw lw0
set style line 4 pt 4  ps ps0 lw lw0
set style line 5 pt 6  ps ps0 lw lw0
set style line 6 pt 8  ps ps0 lw lw0
set style line 7 pt 10 ps ps0 lw lw0
set style line 8 pt 12 ps ps0 lw lw0
set style line 9 pt 14 ps ps0 lw lw0

set terminal png size 1024,768 font "Arial,18"
set output "shortonly0-throughput.png"
#set terminal postscript eps enhanced color solid size 10cm,10cm font "Consolas,14"
#set output "short-all.eps"

''', file=f)
    print('plot \\', file=f)
    for name, ls in zip(name_li, [1, 2, 3, 4, 5, 6, 7, 8, 9]):
        print('"< cat shortlong0.plot |grep \\"^{} \\"" using 2:3:4:5 title "{}" with yerrorlines ls {}, \\'.format(name, name, ls), file=f)
    print('NaN notitle', file=f)

! gnuplot shortlong0.gp
